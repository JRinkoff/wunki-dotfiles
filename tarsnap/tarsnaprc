### Recommended options

# Tarsnap cache directory
cachedir ~/Library/Caches/tarsnap-cache

# Tarsnap key file
keyfile ~/.ssh/tarsnap-mbp.key

# Don't archive files which have the nodump flag set
nodump

# Print statistics when creating or deleting archives
print-stats

# Create a checkpoint once per GB of uploaded data.
checkpoint-bytes 1G

### Other options, not applicable to most systems

# Aggressive network behaviour: Use multiple TCP connections when
# writing archives.  Use of this option is recommended only in
# cases where TCP congestion control is known to be the limiting
# factor in upload performance.
#aggressive-networking

# Exclude files and directories matching specified patterns
# Extensions
exclude *.box
exclude *.pyc
exclude *.elc
exclude *.egg
exclude *.o
exclude *.hi
exclude *.chi
exclude *.chs.h
exclude *.jar
exclude *.cache

# Files
exclude .DS_Store

# Directories
exclude cabal-dev
exclude ~/.vagrant.d
exclude ~/.gem
exclude ~/.npm
exclude ~/.virtualenvs
exclude ~/.m2
exclude ~/.cabal
exclude ~/.Trashes
exclude ~/Library/Caches
exclude ~/Dropbox
exclude ~/Documents/TomTom
exclude ~/Google\ Drive
exclude ~/Movies
exclude ~/VirtualBox\ VMs

# Make stats more readable
humanize-numbers

# Include only files and directories matching specified patterns
#include

# Attempt to reduce tarsnap memory consumption.  This option
# will slow down the process of creating archives, but may help
# on systems where the average size of files being backed up is
# less than 1 MB.
#lowmem

# Try even harder to reduce tarsnap memory consumption.  This can
# significantly slow down tarsnap, but reduces its memory usage
# by an additional factor of 2 beyond what the lowmem option does.
#verylowmem

# Snapshot time.  Use this option if you are backing up files
# from a filesystem snapshot rather than from a "live" filesystem.
#snaptime <file>
